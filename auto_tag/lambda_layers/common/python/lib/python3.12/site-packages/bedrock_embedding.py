# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

"""
This module provides functionality for interacting with the Bedrock Runtime service to
convert sentences to numerical embeddings using a specified machine learning model.

It includes the following functions:

- `get_bedrock_runtime_client`: Initializes and retrieves a singleton instance of the
  Bedrock Runtime client for AWS.
- `get_embedding_from_text`: Converts a given sentence into a numerical embedding by
  calling the Bedrock embedding model.

Environment Variables:
    REGION_NAME (str): The AWS region where the Bedrock Runtime service is accessed.
        Defaults to "us-east-1" if not specified.

    EMBEDDING_MODEL (str): The identifier of the embedding model to use. Must be
        specified as an environment variable; otherwise, `get_embedding_from_text`
        raises a ValueError.

"""
import json
import os

import boto3

# Singleton instance of the Bedrock Runtime client, initialized as None and created when needed.
_BEDROCK_RUNTIME_CLIENT = None


def get_bedrock_runtime_client():
    """Get or create a Bedrock Runtime client.

    This function checks if the Bedrock Runtime client has already been created. If not,
    it initializes a new client with the specified AWS region, which defaults to "us-east-1"
    unless overridden by the 'REGION_NAME' environment variable.

    Returns:
        A boto3 client for the Bedrock Runtime service.
    """
    global _BEDROCK_RUNTIME_CLIENT
    if _BEDROCK_RUNTIME_CLIENT is None:
        region_name = os.environ.get("REGION_NAME", "us-east-1")
        _BEDROCK_RUNTIME_CLIENT = boto3.client(service_name="bedrock-runtime", region_name=region_name)
    return _BEDROCK_RUNTIME_CLIENT


def get_embedding_from_text(text):
    """
    Convert a sentence to an embedding

    In this POC, we call the Bedrock embedding model
    Args:
        text: a sample text

    Returns:
        np.array: a vector that converted by embedding model

    """
    embedding_model = os.environ.get("EMBEDDING_MODEL")
    if not embedding_model:
        raise ValueError("Error: 'EMBEDDING_MODEL' environment variable is missing.")

    body = {"inputText": text}
    # invoke_bedrock
    response = get_bedrock_runtime_client().invoke_model(
        contentType="application/json",
        accept="*/*",
        modelId=os.environ.get("EMBEDDING_MODEL"),
        body=json.dumps(body),
    )

    response_body = json.loads(response.get("body").read())

    return response_body["embedding"]
